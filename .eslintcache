[{"/home/gerardo/the_odin_project/memory-card/src/index.js":"1","/home/gerardo/the_odin_project/memory-card/src/App.js":"2","/home/gerardo/the_odin_project/memory-card/src/helpers.js":"3","/home/gerardo/the_odin_project/memory-card/src/components/Scoreboard.js":"4","/home/gerardo/the_odin_project/memory-card/src/gameCards.js":"5"},{"size":226,"mtime":1611344015518,"results":"6","hashOfConfig":"7"},{"size":1975,"mtime":1611360002633,"results":"8","hashOfConfig":"7"},{"size":471,"mtime":1611360004845,"results":"9","hashOfConfig":"7"},{"size":358,"mtime":1611346831663,"results":"10","hashOfConfig":"7"},{"size":130,"mtime":1611359116745,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"zn9k7u",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"/home/gerardo/the_odin_project/memory-card/src/index.js",[],["25","26"],"/home/gerardo/the_odin_project/memory-card/src/App.js",["27"],"import React, { useState, useEffect } from \"react\";\nimport \"./styles/App.css\";\nimport Scoreboard from \"./components/Scoreboard\";\nimport { shuffle, randomColor } from \"./helpers\";\nimport gameCards from \"./gameCards\";\n\nconst App = () => {\n  const [numberOfCards, setNumberOfCards] = useState(3);\n  const [highScore, setHighScore] = useState(0);\n  const [currentScore, setCurrentScore] = useState(0);\n  const [shownCards, setShownCards] = useState([]);\n  const [selectedIds, setSelectedIds] = useState([]);\n  const [gameover, setGameover] = useState(false);\n\n  const fetchRandomCards = (cards, numCards) => {\n    const randomCards = shuffle(cards).slice(0, numCards);\n    setShownCards(randomCards);\n  };\n\n  useEffect(() => {\n    fetchRandomCards(gameCards, numberOfCards);\n  }, [selectedIds, numberOfCards]);\n\n  const cardSelectHandler = (e) => {\n    const selectedId = e.target.id;\n    if (selectedIds.includes(selectedId)) {\n      setGameover(true);\n    } else {\n      setSelectedIds([...selectedIds, selectedId]);\n      setCurrentScore(currentScore + 1);\n    }\n  };\n\n  useEffect(() => {\n    if (currentScore > highScore) setHighScore(currentScore);\n  }, [currentScore, highScore]);\n\n  const resetHandler = () => {\n    setCurrentScore(0);\n    setSelectedIds([0]);\n    setGameover(false);\n  };\n\n  let content = (\n    <div className={\"column App\"}>\n      <h1>Memory Dawg</h1>\n      <Scoreboard currentScore={currentScore} highScore={highScore} />\n      <div>\n        {shownCards.map((card) => (\n          <button\n            onClick={cardSelectHandler}\n            id={card.id}\n            key={card.id}\n            style={{ backgroundColor: `#${randomColor()}` }}\n          >\n            {card.name}\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n\n  if (gameover) {\n    content = (\n      <div className={\"App\"}>\n        <h1>Game Over</h1>\n        <button onClick={resetHandler}>restart</button>\n      </div>\n    );\n  }\n\n  return content;\n};\n\nexport default App;\n","/home/gerardo/the_odin_project/memory-card/src/helpers.js",[],"/home/gerardo/the_odin_project/memory-card/src/components/Scoreboard.js",[],["28","29"],"/home/gerardo/the_odin_project/memory-card/src/gameCards.js",[],{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":8,"column":25,"nodeType":"36","messageId":"37","endLine":8,"endColumn":41},{"ruleId":"30","replacedBy":"38"},{"ruleId":"32","replacedBy":"39"},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"no-unused-vars","'setNumberOfCards' is assigned a value but never used.","Identifier","unusedVar",["40"],["41"],"no-global-assign","no-unsafe-negation"]